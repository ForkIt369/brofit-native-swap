# ============================================================================
# üîê BroFit Environment Variables
# ============================================================================
#
# ‚ö†Ô∏è CRITICAL SECURITY WARNING:
# API keys should NEVER be exposed in frontend JavaScript code!
# This .env.example file documents required API keys for reference.
#
# For production deployment:
# 1. Move ALL API interactions to a backend server/proxy
# 2. Store API keys as environment variables on the server
# 3. Have frontend call your backend endpoints (e.g., /api/quote)
# 4. Backend uses API keys to call RocketX, Moralis, CoinGecko
# 5. Never commit actual .env file to Git (add to .gitignore)
#
# ============================================================================

# ----------------------------------------------------------------------------
# RocketX API
# ----------------------------------------------------------------------------
# Purpose: Cross-chain swap and bridge quotations
# Provider: https://rocketx.exchange
# Dashboard: https://rocketx.exchange/developers
# Tier: Free tier (rate limits apply)
# Current Location: widgets/shared/rocketx-api.js:581 ‚ö†Ô∏è EXPOSED!
#
# Get your API key:
# 1. Visit https://rocketx.exchange/developers
# 2. Sign up for a developer account
# 3. Create a new API key
# 4. Copy the key and store it securely

ROCKETX_API_KEY=your-rocketx-api-key-here

# ----------------------------------------------------------------------------
# Moralis API
# ----------------------------------------------------------------------------
# Purpose: Multi-chain blockchain data (balances, tokens, NFTs, history)
# Provider: https://moralis.io
# Dashboard: https://admin.moralis.io/web3apis
# Tier: Starter Plan (40,000 requests/month)
# Current Location: widgets/shared/moralis-api.js:14 ‚ö†Ô∏è EXPOSED!
#
# Get your API key:
# 1. Visit https://admin.moralis.io
# 2. Create a new project
# 3. Go to Settings ‚Üí Web3 API Keys
# 4. Copy the API key (JWT format)
# 5. Store it securely

MORALIS_API_KEY=your-moralis-jwt-token-here

# ----------------------------------------------------------------------------
# CoinGecko API
# ----------------------------------------------------------------------------
# Purpose: Token price data, market data, and coin metadata
# Provider: https://www.coingecko.com
# Dashboard: https://www.coingecko.com/en/api/pricing
# Tier: Demo Plan (10-30 calls/minute)
# Current Location: widgets/shared/coingecko-api.js:14 ‚ö†Ô∏è EXPOSED!
#
# Get your API key:
# 1. Visit https://www.coingecko.com/en/api/pricing
# 2. Sign up for Demo plan (free)
# 3. Get API key from dashboard
# 4. Store it securely

COINGECKO_API_KEY=your-coingecko-api-key-here

# ----------------------------------------------------------------------------
# Wallet Connect (Optional)
# ----------------------------------------------------------------------------
# Purpose: WalletConnect v2 protocol for wallet connections
# Provider: https://cloud.walletconnect.com
# Dashboard: https://cloud.walletconnect.com/app
# Tier: Free tier (10,000 requests/month)
#
# Get your project ID:
# 1. Visit https://cloud.walletconnect.com
# 2. Create a new project
# 3. Copy the Project ID
# 4. Configure allowed domains

WALLETCONNECT_PROJECT_ID=your-walletconnect-project-id-here

# ----------------------------------------------------------------------------
# Infura RPC (Optional)
# ----------------------------------------------------------------------------
# Purpose: Direct blockchain RPC access for custom queries
# Provider: https://infura.io
# Dashboard: https://app.infura.io
# Tier: Free tier (100,000 requests/day)
#
# Get your API key:
# 1. Visit https://app.infura.io
# 2. Create a new project
# 3. Copy the Project ID
# 4. Use as RPC URL: https://mainnet.infura.io/v3/YOUR-PROJECT-ID

INFURA_PROJECT_ID=your-infura-project-id-here

# ----------------------------------------------------------------------------
# Alchemy RPC (Alternative to Infura)
# ----------------------------------------------------------------------------
# Purpose: Alternative RPC provider with enhanced APIs
# Provider: https://alchemy.com
# Dashboard: https://dashboard.alchemy.com
# Tier: Free tier (300M compute units/month)
#
# Get your API key:
# 1. Visit https://dashboard.alchemy.com
# 2. Create a new app
# 3. Copy the API key
# 4. Use as RPC URL: https://eth-mainnet.g.alchemy.com/v2/YOUR-API-KEY

ALCHEMY_API_KEY=your-alchemy-api-key-here

# ----------------------------------------------------------------------------
# Production Deployment Settings
# ----------------------------------------------------------------------------

# Base URL for your backend API proxy
# Example: https://api.yourdomain.com
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api

# Frontend app URL (for CORS configuration)
# Example: https://brofit.yourdomain.com
NEXT_PUBLIC_APP_URL=http://localhost:8000

# Environment: development | staging | production
NODE_ENV=development

# Enable debug logging (true/false)
DEBUG=false

# Cache duration in milliseconds
CACHE_DURATION=300000

# Rate limiting (requests per minute)
RATE_LIMIT_RPM=60

# ----------------------------------------------------------------------------
# Security Headers & CORS
# ----------------------------------------------------------------------------

# Allowed origins for CORS (comma-separated, or "*" to allow all for embedding)
# Set to "*" to enable embedding on any website
# In production, restrict to specific domains for security
ALLOWED_ORIGINS=*

# Content Security Policy
CSP_DIRECTIVES=default-src 'self'; connect-src 'self' https://*.rocketx.exchange https://*.moralis.io https://*.coingecko.com;

# ----------------------------------------------------------------------------
# Monitoring & Analytics (Optional)
# ----------------------------------------------------------------------------

# Sentry DSN for error tracking
SENTRY_DSN=your-sentry-dsn-here

# Google Analytics tracking ID
GA_TRACKING_ID=G-XXXXXXXXXX

# PostHog analytics key
POSTHOG_API_KEY=your-posthog-key-here

# ----------------------------------------------------------------------------
# Database (if using backend persistence)
# ----------------------------------------------------------------------------

# PostgreSQL connection string
DATABASE_URL=postgresql://user:password@localhost:5432/brofit

# Redis cache URL
REDIS_URL=redis://localhost:6379

# ----------------------------------------------------------------------------
# Additional Notes
# ----------------------------------------------------------------------------
#
# üìù Implementation Checklist:
#
# [ ] Create .env file from this template
# [ ] Fill in actual API keys (never commit!)
# [ ] Add .env to .gitignore
# [ ] Build backend proxy server (Node.js/Express recommended)
# [ ] Update frontend to call backend endpoints instead of direct API calls
# [ ] Configure CORS properly on backend
# [ ] Add rate limiting to backend
# [ ] Setup monitoring and logging
# [ ] Test all API integrations through proxy
# [ ] Deploy backend before frontend
#
# üí° Recommended Backend Stack:
# - Node.js + Express (simple REST API)
# - Vercel Serverless Functions (zero config)
# - Cloudflare Workers (edge deployment)
# - AWS Lambda + API Gateway (scalable)
#
# üìö Reference Documentation:
# - RocketX API: https://docs.rocketx.exchange
# - Moralis API: https://docs.moralis.io
# - CoinGecko API: https://www.coingecko.com/api/documentation
#
# ============================================================================
